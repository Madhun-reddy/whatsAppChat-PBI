{
  "compatibilityLevel": 1567,
  "model": {
    "annotations": [
      {
        "name": "PBIDesktopVersion",
        "value": "2.126.927.0 (24.02)"
      },
      {
        "name": "PBI_QueryOrder",
        "value": "[\"WhatsApp Chat\",\"Calendar\",\"All_measures\",\"Day_Bucket\",\"HQ\",\"Holidays\",\"Query1\",\"Metadata\",\"fDataClean\"]"
      },
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "1"
      },
      {
        "name": "PBI_ProTooling",
        "value": "[\"DevMode\"]"
      }
    ],
    "culture": "en-US",
    "cultures": [
      {
        "name": "en-US",
        "linguisticMetadata": {
          "content": {
            "DynamicImprovement": "HighConfidence",
            "Language": "en-US",
            "Version": "1.0.0"
          },
          "contentType": "json"
        }
      }
    ],
    "dataAccessOptions": {
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "expressions": [
      {
        "name": "Query1",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Source = #shared,",
          "    #\"Converted to Table\" = Record.ToTable(Source),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Converted to Table\", each ([Name] = \"Text.Contains\")),",
          "    Value = #\"Filtered Rows\"{0}[Value]",
          "in",
          "    Value"
        ],
        "kind": "m",
        "lineageTag": "59832140-37e5-4114-bb1f-2202dc94cb18"
      },
      {
        "name": "Metadata",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Table.FromColumns({Lines.FromBinary(File.Contents(\"E:\\DV CLASS\\POWER BI\\Projects\\WhatsApp Process Reporting Analytics\\Maa Family Chat\\WhatsApp Chat with Maa Family.txt\"), null, null, 1252)}),",
          "    #\"Split Column by Delimiter\" = Table.SplitColumn(Source, \"Column1\", Splitter.SplitTextByDelimiter(\": location:\", QuoteStyle.Csv), {\"Column1.1\", \"Column1.2\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Column1.1\", type text}, {\"Column1.2\", type text}}),",
          "    #\"Split Column by Delimiter1\" = Table.SplitColumn(#\"Changed Type\", \"Column1.1\", Splitter.SplitTextByEachDelimiter({\": \"}, QuoteStyle.Csv, true), {\"Column1.1.1\", \"Column1.1.2\"}),",
          "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter1\",{{\"Column1.1.1\", type text}, {\"Column1.1.2\", type text}}),",
          "    #\"Split Column by Delimiter2\" = Table.SplitColumn(#\"Changed Type1\", \"Column1.1.1\", Splitter.SplitTextByDelimiter(\" - \", QuoteStyle.Csv), {\"Column1.1.1.1\", \"Column1.1.1.2\"}),",
          "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Split Column by Delimiter2\",{{\"Column1.1.1.1\", type text}, {\"Column1.1.1.2\", type text}}),",
          "    #\"Split Column by Delimiter3\" = Table.SplitColumn(#\"Changed Type2\", \"Column1.1.1.1\", Splitter.SplitTextByEachDelimiter({\", \"}, QuoteStyle.Csv, false), {\"Column1.1.1.1.1\", \"Column1.1.1.1.2\"}),",
          "    #\"Changed Type3\" = Table.TransformColumnTypes(#\"Split Column by Delimiter3\",{{\"Column1.1.1.1.1\", type text}, {\"Column1.1.1.1.2\", type time}}),",
          "    #\"Replaced Errors\" = Table.ReplaceErrorValues(#\"Changed Type3\", {{\"Column1.1.1.1.2\", null}}),",
          "    #\"Split Column by Delimiter4\" = Table.SplitColumn(#\"Replaced Errors\", \"Column1.1.1.1.1\", Splitter.SplitTextByEachDelimiter({\"D\"}, QuoteStyle.Csv, false), {\"Column1.1.1.1.1.1\", \"Column1.1.1.1.1.2\"}),",
          "    #\"Changed Type4\" = Table.TransformColumnTypes(#\"Split Column by Delimiter4\",{{\"Column1.1.1.1.1.1\", type text}, {\"Column1.1.1.1.1.2\", type text}}),",
          "    #\"Changed Type5\" = Table.TransformColumnTypes(#\"Changed Type4\",{{\"Column1.1.1.1.1.1\", type date}}),",
          "    #\"Replaced Value\" = Table.ReplaceValue(#\"Changed Type5\",\"\",null,Replacer.ReplaceValue,{\"Column1.1.1.1.1.1\"}),",
          "    #\"Replaced Errors1\" = Table.ReplaceErrorValues(#\"Replaced Value\", {{\"Column1.1.1.1.1.1\", null}}),",
          "    #\"Filled Down\" = Table.FillDown(#\"Replaced Errors1\",{\"Column1.1.1.1.1.1\"}),",
          "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Filled Down\",\"\",null,Replacer.ReplaceValue,{\"Column1.1.1.1.1.2\"}),",
          "    #\"Cleaned Text\" = Table.TransformColumns(#\"Replaced Value1\",{{\"Column1.1.1.1.1.2\", Text.Clean, type text}}),",
          "    #\"Trimmed Text\" = Table.TransformColumns(#\"Cleaned Text\",{{\"Column1.1.1.1.1.2\", Text.Trim, type text}}),",
          "    #\"Capitalized Each Word\" = Table.TransformColumns(#\"Trimmed Text\",{{\"Column1.1.1.1.1.2\", Text.Proper, type text}}),",
          "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Capitalized Each Word\",\"Ma Devaraj: Name \",\"Ma Devaraj\",Replacer.ReplaceText,{\"Column1.1.1.2\"}),",
          "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Replaced Value2\",{\"Column1.1.1.2\", \"Column1.1.1.1.1.2\", \"Column1.1.1.1.1.1\", \"Column1.1.1.1.2\",   \"Column1.1.2\", \"Column1.2\"}),",
          "    ReplacedSuresh = Table.ReplaceValue(#\"Reordered Columns\",\"Madhu N ReddyðŸ˜ƒ\",\"Suresh\",Replacer.ReplaceText,{\"Column1.1.1.2\"}),",
          "    RemovedMaInitials = Table.ReplaceValue(ReplacedSuresh,\"Ma \",\"\",Replacer.ReplaceText,{\"Column1.1.1.2\"}),",
          "    #\"Removed Columns\" = Table.RemoveColumns(RemovedMaInitials,{\"Column1.2\"}),",
          "    #\"Filled Down1\" = Table.FillDown(#\"Removed Columns\",{\"Column1.1.1.2\"}),",
          "    #\"Replaced Value5\" = Table.ReplaceValue(#\"Filled Down1\",\"\",null,Replacer.ReplaceValue,{\"Column1.1.1.2\"}),",
          "    #\"Trimmed Text1\" = Table.TransformColumns(#\"Replaced Value5\",{{\"Column1.1.2\", Text.Trim, type text}}),",
          "    #\"Cleaned Text1\" = Table.TransformColumns(#\"Trimmed Text1\",{{\"Column1.1.2\", Text.Clean, type text}}),",
          "    #\"Filled Down2\" = Table.FillDown(#\"Cleaned Text1\",{\"Column1.1.2\"}),",
          "    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Filled Down2\",{\"Column1.1.1.1.1.1\", \"Column1.1.1.1.2\", \"Column1.1.1.2\", \"Column1.1.2\", \"Column1.1.1.1.1.2\"}),",
          "    #\"===DynamicCols====\" = #\"Reordered Columns1\",",
          "    Custom1 = Table.ColumnNames(#\"===DynamicCols====\"),",
          "    #\"Converted to Table\" = Table.FromList(Custom1, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
          "    #\"Added Conditional Column\" = Table.AddColumn(#\"Converted to Table\", \"Custom\", each if [Column1] = \"Column1.1.1.1.1.1\" then \"Date\" else if [Column1] = \"Column1.1.1.1.2\" then \"Time\" else if [Column1] = \"Column1.1.1.2\" then \"Representative\" else if [Column1] = \"Column1.1.2\" then \"ReportType\" else if [Column1] = \"Column1.1.1.1.1.2\" then \"Calls\" else null, type text),",
          "    #\"Transposed Table\" = Table.Transpose(#\"Added Conditional Column\"),",
          "    ColList = Table.ToColumns(#\"Transposed Table\"),",
          "    #\"===End==========\" = ColList,",
          "    RenamedColumns = Table.RenameColumns(#\"===DynamicCols====\",#\"===End==========\"),",
          "    #\"Replaced Value6\" = Table.ReplaceValue(RenamedColumns,\"End of the day calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"Day end calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"End of the calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"Yesterdays day end calls\",\"EODY\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value9\",\"Eod cals\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value10\",\"Eod calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value12\" = Table.ReplaceValue(#\"Replaced Value11\",\"EOD calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value13\" = Table.ReplaceValue(#\"Replaced Value12\",\"EOD Calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value14\" = Table.ReplaceValue(#\"Replaced Value13\",\"Yesterday's EOD\",\"EODY\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value15\" = Table.ReplaceValue(#\"Replaced Value14\",\"Today's plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value16\" = Table.ReplaceValue(#\"Replaced Value15\",\"Good morning sir Today work plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value17\" = Table.ReplaceValue(#\"Replaced Value16\",\"Today work plan is\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value18\" = Table.ReplaceValue(#\"Replaced Value17\",\"Todays plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value19\" = Table.ReplaceValue(#\"Replaced Value18\",\"Good morning sir today work plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value20\" = Table.ReplaceValue(#\"Replaced Value19\",\"Today work plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value21\" = Table.ReplaceValue(#\"Replaced Value20\",\"Good morning today work plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value22\" = Table.ReplaceValue(#\"Replaced Value21\",\"today work plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value23\" = Table.ReplaceValue(#\"Replaced Value22\",\"Today's calls\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value24\" = Table.ReplaceValue(#\"Replaced Value23\",\"EOD with Govinda\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value25\" = Table.ReplaceValue(#\"Replaced Value24\",\"EOD call\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value26\" = Table.ReplaceValue(#\"Replaced Value25\",\"End if the day calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value27\" = Table.ReplaceValue(#\"Replaced Value26\",\"Good evening EOD\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value28\" = Table.ReplaceValue(#\"Replaced Value27\",\"Day end plan\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value29\" = Table.ReplaceValue(#\"Replaced Value28\",\"Today plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value30\" = Table.ReplaceValue(#\"Replaced Value29\",\"Yesterday end of the day calls\",\"EODY\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value31\" = Table.ReplaceValue(#\"Replaced Value30\",\"Good morning sir today work\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Replaced Value31\", each [Calls] <> \"4 Pg Drs\" and [Calls] <> \"Cells 6\"),",
          "    #\"Filled Down3\" = Table.FillDown(#\"Filtered Rows\",{\"Time\"}),",
          "    #\"Uppercased Text\" = Table.TransformColumns(#\"Filled Down3\",{{\"ReportType\", Text.Upper, type text}}),",
          "    #\"Filtered Rows1\" = Table.SelectRows(#\"Uppercased Text\", each ([Calls] <> null)),",
          "    #\"Replaced Value34\" = Table.ReplaceValue(#\"Filtered Rows1\",\"YEOD\",\"EODY\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Grouped Rows\" = Table.Group(#\"Replaced Value34\", {\"Date\", \"Time\", \"Representative\", \"ReportType\"}, {{\"Count\", each _, type table [Date=nullable date, Time=nullable time, HQ=nullable text, Report=nullable text, Calls=text]}}),",
          "    #\"Filtered Rows3\" = Table.SelectRows(#\"Grouped Rows\", each ([ReportType] = \"EOD\" or [ReportType] = \"EODY\" or [ReportType] = \"TP\")),",
          "    #\"Sorted Rows\" = Table.Sort(#\"Filtered Rows3\",{{\"ReportType\", Order.Ascending}, {\"Date\", Order.Ascending}}),",
          "    #\"Expanded Count\" = Table.ExpandTableColumn(#\"Sorted Rows\", \"Count\", {\"Calls\"}, {\"Count.Calls\"}),",
          "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded Count\",{{\"Count.Calls\", \"Calls\"}}),",
          "    #\"Replaced Value32\" = Table.ReplaceValue(#\"Renamed Columns1\",\"R. \",\"R \",Replacer.ReplaceText,{\"Calls\"}),",
          "    #\"Filtered Rows4\" = Table.SelectRows(#\"Replaced Value32\", each ([Calls] <> null and [Calls] <> \"\") and ([Representative] <> \"Amith\")),",
          "    #\"Replaced Value33\" = Table.ReplaceValue(#\"Filtered Rows4\",\"R.\",\"R \",Replacer.ReplaceText,{\"Calls\"}),",
          "    #\"Trimmed Text2\" = Table.TransformColumns(#\"Replaced Value33\",{{\"Calls\", Text.Trim, type text}}),",
          "    #\"Replaced Value3\" = Table.ReplaceValue(#\"Trimmed Text2\",\"R \",\"Dr \",Replacer.ReplaceText,{\"Calls\"}),",
          "    #\"Filtered Rows5\" = Table.SelectRows(#\"Replaced Value3\", each not Text.Contains([Calls], \"Rem\")),",
          "    #\"HQ Merged\" = Table.FuzzyNestedJoin(#\"Filtered Rows5\", {\"Representative\"}, HQ, {\"Representative\"}, \"HQ\", JoinKind.LeftOuter, [IgnoreCase=true, IgnoreSpace=true]),",
          "    #\"Expanded HQ\" = Table.ExpandTableColumn(#\"HQ Merged\", \"HQ\", {\"HqKey\"}, {\"HqKey\"}),",
          "    #\"Reordered Columns2\" = Table.ReorderColumns(#\"Expanded HQ\",{\"ReportType\", \"HqKey\", \"Representative\", \"Date\", \"Time\", \"Calls\"}),",
          "    #\"Filtered Rows2\" = Table.SelectRows(#\"Reordered Columns2\", each [Calls] <> \"\")",
          "in",
          "    #\"Filtered Rows2\""
        ],
        "kind": "m",
        "lineageTag": "5f9798a3-2df8-4202-94ad-75d9b408dd2d",
        "queryGroup": "fDataClean"
      },
      {
        "name": "fDataClean",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Source = () => let",
          "    Source = Table.FromColumns({Lines.FromBinary(File.Contents(\"E:\\DV CLASS\\POWER BI\\Projects\\WhatsApp Process Reporting Analytics\\Maa Family Chat\\WhatsApp Chat with Maa Family.txt\"), null, null, 1252)}),",
          "    #\"Split Column by Delimiter\" = Table.SplitColumn(Source, \"Column1\", Splitter.SplitTextByDelimiter(\": location:\", QuoteStyle.Csv), {\"Column1.1\", \"Column1.2\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Column1.1\", type text}, {\"Column1.2\", type text}}),",
          "    #\"Split Column by Delimiter1\" = Table.SplitColumn(#\"Changed Type\", \"Column1.1\", Splitter.SplitTextByEachDelimiter({\": \"}, QuoteStyle.Csv, true), {\"Column1.1.1\", \"Column1.1.2\"}),",
          "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter1\",{{\"Column1.1.1\", type text}, {\"Column1.1.2\", type text}}),",
          "    #\"Split Column by Delimiter2\" = Table.SplitColumn(#\"Changed Type1\", \"Column1.1.1\", Splitter.SplitTextByDelimiter(\" - \", QuoteStyle.Csv), {\"Column1.1.1.1\", \"Column1.1.1.2\"}),",
          "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Split Column by Delimiter2\",{{\"Column1.1.1.1\", type text}, {\"Column1.1.1.2\", type text}}),",
          "    #\"Split Column by Delimiter3\" = Table.SplitColumn(#\"Changed Type2\", \"Column1.1.1.1\", Splitter.SplitTextByEachDelimiter({\", \"}, QuoteStyle.Csv, false), {\"Column1.1.1.1.1\", \"Column1.1.1.1.2\"}),",
          "    #\"Changed Type3\" = Table.TransformColumnTypes(#\"Split Column by Delimiter3\",{{\"Column1.1.1.1.1\", type text}, {\"Column1.1.1.1.2\", type time}}),",
          "    #\"Replaced Errors\" = Table.ReplaceErrorValues(#\"Changed Type3\", {{\"Column1.1.1.1.2\", null}}),",
          "    #\"Split Column by Delimiter4\" = Table.SplitColumn(#\"Replaced Errors\", \"Column1.1.1.1.1\", Splitter.SplitTextByEachDelimiter({\"D\"}, QuoteStyle.Csv, false), {\"Column1.1.1.1.1.1\", \"Column1.1.1.1.1.2\"}),",
          "    #\"Changed Type4\" = Table.TransformColumnTypes(#\"Split Column by Delimiter4\",{{\"Column1.1.1.1.1.1\", type text}, {\"Column1.1.1.1.1.2\", type text}}),",
          "    #\"Changed Type5\" = Table.TransformColumnTypes(#\"Changed Type4\",{{\"Column1.1.1.1.1.1\", type date}}),",
          "    #\"Replaced Value\" = Table.ReplaceValue(#\"Changed Type5\",\"\",null,Replacer.ReplaceValue,{\"Column1.1.1.1.1.1\"}),",
          "    #\"Replaced Errors1\" = Table.ReplaceErrorValues(#\"Replaced Value\", {{\"Column1.1.1.1.1.1\", null}}),",
          "    #\"Filled Down\" = Table.FillDown(#\"Replaced Errors1\",{\"Column1.1.1.1.1.1\"}),",
          "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Filled Down\",\"\",null,Replacer.ReplaceValue,{\"Column1.1.1.1.1.2\"}),",
          "    #\"Cleaned Text\" = Table.TransformColumns(#\"Replaced Value1\",{{\"Column1.1.1.1.1.2\", Text.Clean, type text}}),",
          "    #\"Trimmed Text\" = Table.TransformColumns(#\"Cleaned Text\",{{\"Column1.1.1.1.1.2\", Text.Trim, type text}}),",
          "    #\"Capitalized Each Word\" = Table.TransformColumns(#\"Trimmed Text\",{{\"Column1.1.1.1.1.2\", Text.Proper, type text}}),",
          "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Capitalized Each Word\",\"Ma Devaraj: Name \",\"Ma Devaraj\",Replacer.ReplaceText,{\"Column1.1.1.2\"}),",
          "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Replaced Value2\",{\"Column1.1.1.2\", \"Column1.1.1.1.1.2\", \"Column1.1.1.1.1.1\", \"Column1.1.1.1.2\",   \"Column1.1.2\", \"Column1.2\"}),",
          "    ReplacedSuresh = Table.ReplaceValue(#\"Reordered Columns\",\"Madhu N ReddyðŸ˜ƒ\",\"Suresh\",Replacer.ReplaceText,{\"Column1.1.1.2\"}),",
          "    RemovedMaInitials = Table.ReplaceValue(ReplacedSuresh,\"Ma \",\"\",Replacer.ReplaceText,{\"Column1.1.1.2\"}),",
          "    #\"Removed Columns\" = Table.RemoveColumns(RemovedMaInitials,{\"Column1.2\"}),",
          "    #\"Filled Down1\" = Table.FillDown(#\"Removed Columns\",{\"Column1.1.1.2\"}),",
          "    #\"Replaced Value5\" = Table.ReplaceValue(#\"Filled Down1\",\"\",null,Replacer.ReplaceValue,{\"Column1.1.1.2\"}),",
          "    #\"Trimmed Text1\" = Table.TransformColumns(#\"Replaced Value5\",{{\"Column1.1.2\", Text.Trim, type text}}),",
          "    #\"Cleaned Text1\" = Table.TransformColumns(#\"Trimmed Text1\",{{\"Column1.1.2\", Text.Clean, type text}}),",
          "    #\"Filled Down2\" = Table.FillDown(#\"Cleaned Text1\",{\"Column1.1.2\"}),",
          "    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Filled Down2\",{\"Column1.1.1.1.1.1\", \"Column1.1.1.1.2\", \"Column1.1.1.2\", \"Column1.1.2\", \"Column1.1.1.1.1.2\"}),",
          "    #\"===DynamicCols====\" = #\"Reordered Columns1\",",
          "    Custom1 = Table.ColumnNames(#\"===DynamicCols====\"),",
          "    #\"Converted to Table\" = Table.FromList(Custom1, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
          "    #\"Added Conditional Column\" = Table.AddColumn(#\"Converted to Table\", \"Custom\", each if [Column1] = \"Column1.1.1.1.1.1\" then \"Date\" else if [Column1] = \"Column1.1.1.1.2\" then \"Time\" else if [Column1] = \"Column1.1.1.2\" then \"Representative\" else if [Column1] = \"Column1.1.2\" then \"ReportType\" else if [Column1] = \"Column1.1.1.1.1.2\" then \"Calls\" else null, type text),",
          "    #\"Transposed Table\" = Table.Transpose(#\"Added Conditional Column\"),",
          "    ColList = Table.ToColumns(#\"Transposed Table\"),",
          "    #\"===End==========\" = ColList,",
          "    RenamedColumns = Table.RenameColumns(#\"===DynamicCols====\",#\"===End==========\"),",
          "    #\"Replaced Value6\" = Table.ReplaceValue(RenamedColumns,\"End of the day calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"Day end calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"End of the calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"Yesterdays day end calls\",\"EODY\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value9\",\"Eod cals\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value10\",\"Eod calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value12\" = Table.ReplaceValue(#\"Replaced Value11\",\"EOD calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value13\" = Table.ReplaceValue(#\"Replaced Value12\",\"EOD Calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value14\" = Table.ReplaceValue(#\"Replaced Value13\",\"Yesterday's EOD\",\"EODY\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value15\" = Table.ReplaceValue(#\"Replaced Value14\",\"Today's plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value16\" = Table.ReplaceValue(#\"Replaced Value15\",\"Good morning sir Today work plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value17\" = Table.ReplaceValue(#\"Replaced Value16\",\"Today work plan is\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value18\" = Table.ReplaceValue(#\"Replaced Value17\",\"Todays plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value19\" = Table.ReplaceValue(#\"Replaced Value18\",\"Good morning sir today work plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value20\" = Table.ReplaceValue(#\"Replaced Value19\",\"Today work plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value21\" = Table.ReplaceValue(#\"Replaced Value20\",\"Good morning today work plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value22\" = Table.ReplaceValue(#\"Replaced Value21\",\"today work plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value23\" = Table.ReplaceValue(#\"Replaced Value22\",\"Today's calls\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value24\" = Table.ReplaceValue(#\"Replaced Value23\",\"EOD with Govinda\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value25\" = Table.ReplaceValue(#\"Replaced Value24\",\"EOD call\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value26\" = Table.ReplaceValue(#\"Replaced Value25\",\"End if the day calls\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value27\" = Table.ReplaceValue(#\"Replaced Value26\",\"Good evening EOD\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value28\" = Table.ReplaceValue(#\"Replaced Value27\",\"Day end plan\",\"EOD\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value29\" = Table.ReplaceValue(#\"Replaced Value28\",\"Today plan\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value30\" = Table.ReplaceValue(#\"Replaced Value29\",\"Yesterday end of the day calls\",\"EODY\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Replaced Value31\" = Table.ReplaceValue(#\"Replaced Value30\",\"Good morning sir today work\",\"TP\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Replaced Value31\", each [Calls] <> \"4 Pg Drs\" and [Calls] <> \"Cells 6\"),",
          "    #\"Filled Down3\" = Table.FillDown(#\"Filtered Rows\",{\"Time\"}),",
          "    #\"Uppercased Text\" = Table.TransformColumns(#\"Filled Down3\",{{\"ReportType\", Text.Upper, type text}}),",
          "    #\"Filtered Rows1\" = Table.SelectRows(#\"Uppercased Text\", each ([Calls] <> null)),",
          "    #\"Replaced Value34\" = Table.ReplaceValue(#\"Filtered Rows1\",\"YEOD\",\"EODY\",Replacer.ReplaceText,{\"ReportType\"}),",
          "    #\"Grouped Rows\" = Table.Group(#\"Replaced Value34\", {\"Date\", \"Time\", \"Representative\", \"ReportType\"}, {{\"Count\", each _, type table [Date=nullable date, Time=nullable time, HQ=nullable text, Report=nullable text, Calls=text]}}),",
          "    #\"Filtered Rows3\" = Table.SelectRows(#\"Grouped Rows\", each ([ReportType] = \"EOD\" or [ReportType] = \"EODY\" or [ReportType] = \"TP\")),",
          "    #\"Sorted Rows\" = Table.Sort(#\"Filtered Rows3\",{{\"ReportType\", Order.Ascending}, {\"Date\", Order.Ascending}}),",
          "    #\"Expanded Count\" = Table.ExpandTableColumn(#\"Sorted Rows\", \"Count\", {\"Calls\"}, {\"Count.Calls\"}),",
          "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded Count\",{{\"Count.Calls\", \"Calls\"}}),",
          "    #\"Replaced Value32\" = Table.ReplaceValue(#\"Renamed Columns1\",\"R. \",\"R \",Replacer.ReplaceText,{\"Calls\"}),",
          "    #\"Filtered Rows4\" = Table.SelectRows(#\"Replaced Value32\", each ([Calls] <> null and [Calls] <> \"\") and ([Representative] <> \"Amith\")),",
          "        #\"Replaced Value33\" = Table.ReplaceValue(#\"Filtered Rows4\",\"R.\",\"R \",Replacer.ReplaceText,{\"Calls\"}),",
          "    #\"Trimmed Text2\" = Table.TransformColumns(#\"Replaced Value33\",{{\"Calls\", Text.Trim, type text}}),",
          "        #\"Replaced Value3\" = Table.ReplaceValue(#\"Trimmed Text2\",\"R \",\"Dr \",Replacer.ReplaceText,{\"Calls\"}),",
          "        #\"Filtered Rows5\" = Table.SelectRows(#\"Replaced Value3\", each not Text.Contains([Calls], \"Rem\")),",
          "        #\"HQ Merged\" = Table.FuzzyNestedJoin(#\"Filtered Rows5\", {\"Representative\"}, HQ, {\"Representative\"}, \"HQ\", JoinKind.LeftOuter, [IgnoreCase=true, IgnoreSpace=true]),",
          "    #\"Expanded HQ\" = Table.ExpandTableColumn(#\"HQ Merged\", \"HQ\", {\"HqKey\"}, {\"HqKey\"}),",
          "    #\"Reordered Columns2\" = Table.ReorderColumns(#\"Expanded HQ\",{\"ReportType\", \"HqKey\", \"Representative\", \"Date\", \"Time\", \"Calls\"}),",
          "    #\"Filtered Rows2\" = Table.SelectRows(#\"Reordered Columns2\", each [Calls] <> \"\")",
          "    in",
          "        #\"Filtered Rows2\"",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "c0d34c8f-68a8-47cf-a65f-cd712c26a1f0",
        "queryGroup": "fDataClean"
      }
    ],
    "queryGroups": [
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "fDataClean"
      }
    ],
    "relationships": [
      {
        "name": "e82b83c0-3856-49d1-bb45-6d5fc05ebfd7",
        "fromColumn": "Date",
        "fromTable": "Calendar",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_00c7c2b5-4c42-4d2e-a58c-99eec91b53a8"
      },
      {
        "name": "885b6d3b-50ba-45cf-addb-6cba22999b76",
        "fromColumn": "WeekDate",
        "fromTable": "Calendar",
        "joinOnDateBehavior": "datePartOnly",
        "toColumn": "Date",
        "toTable": "LocalDateTable_99174f75-cabe-4d7b-b52b-6a8470ba1688"
      },
      {
        "name": "a350648f-6173-4c39-8fe8-ffb4812ffba1",
        "fromColumn": "HqKey",
        "fromTable": "WhatsApp Chat",
        "toColumn": "HqKey",
        "toTable": "HQ"
      },
      {
        "name": "412221d5-d86a-4700-a990-8cd8e552f290",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "Date",
        "fromTable": "Holidays",
        "toColumn": "Date",
        "toTable": "Calendar"
      },
      {
        "name": "881f8d9c-c21d-4601-844b-10aa71b4c338",
        "fromColumn": "Date",
        "fromTable": "WhatsApp Chat",
        "toColumn": "Date",
        "toTable": "Calendar"
      }
    ],
    "sourceQueryCulture": "en-IN",
    "tables": [
      {
        "name": "DateTableTemplate_cf295157-1c45-4085-9cb4-9cc14fc5a2d4",
        "annotations": [
          {
            "name": "__PBI_TemplateDateTable",
            "value": "true"
          },
          {
            "name": "DefaultItem",
            "value": "DateHierarchy"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "0edde107-fc02-4848-ba5e-2adbe3aec4c6",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "79fa136d-7b76-4036-98c9-919ff546b72c",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "ed2eea57-f0c3-4682-801d-630f3c4a9a71",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "9482cd36-f2fc-49bb-9bf3-2ede6418d622",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "e04dad8b-08e0-4657-a735-a78857c293ea",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "85692bc6-ca62-4686-a7ec-577c2a296a75",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "c14a2237-f5cb-4e19-a720-b12c3c9d0898",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "2ca900ea-d455-4a2b-a273-de1b82747e58",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "00de0d41-8bb1-4453-9dda-6f9c0877a6a3",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "eac07618-6208-466c-af0d-66bc51bab762",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "817e1168-4f74-4ef7-8cf8-7d3ffb7c4098",
                "ordinal": 3
              }
            ],
            "lineageTag": "efa7e0f4-5cd6-49fb-bcd2-3f0cc0d02992"
          }
        ],
        "isHidden": true,
        "isPrivate": true,
        "lineageTag": "1df34eb6-3719-4d84-b5a0-c17a96979701",
        "partitions": [
          {
            "name": "DateTableTemplate_cf295157-1c45-4085-9cb4-9cc14fc5a2d4-695de468-6b82-4cd4-88ae-e375d6d67a73",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(2015,1,1), Date(2015,1,1))",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Calendar",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "d22ed608-e1e5-435c-9929-10e7a399d395",
            "sourceColumn": "Date",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_00c7c2b5-4c42-4d2e-a58c-99eec91b53a8"
                },
                "isDefault": true,
                "relationship": "e82b83c0-3856-49d1-bb45-6d5fc05ebfd7"
              }
            ]
          },
          {
            "name": "MonthNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "74329499-1374-4723-a941-433a0d950378",
            "sourceColumn": "MonthNum",
            "summarizeBy": "sum"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "f4c06cfa-8207-41c5-bb5e-3fb3c0bfe105",
            "sortByColumn": "MonthNum",
            "sourceColumn": "Month",
            "summarizeBy": "none"
          },
          {
            "name": "MonthLong",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "69a49971-1547-4f43-90a2-3d46d2d4eff2",
            "sourceColumn": "MonthLong",
            "summarizeBy": "none"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c34d19d2-4d02-4812-889c-93808b9c74e6",
            "sourceColumn": "Quarter",
            "summarizeBy": "none"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "0772f636-75aa-443f-92f6-60b97cbe430d",
            "sourceColumn": "Year",
            "summarizeBy": "sum"
          },
          {
            "name": "FiscalMonthNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "5ba3ca77-4bd6-419f-b2f4-04530540e881",
            "sourceColumn": "FiscalMonthNum",
            "summarizeBy": "sum"
          },
          {
            "name": "FiscalMonth",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0987c465-983f-4e5b-ab0b-534c90df6e3d",
            "sourceColumn": "FiscalMonth",
            "summarizeBy": "none"
          },
          {
            "name": "FiscalMonthLong",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "68d3b0de-eb23-460c-b344-d0cfe542fc0c",
            "sourceColumn": "FiscalMonthLong",
            "summarizeBy": "none"
          },
          {
            "name": "FiscalQuarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d7df2dc7-9637-4293-976c-71c9193e27a5",
            "sourceColumn": "FiscalQuarter",
            "summarizeBy": "none"
          },
          {
            "name": "FiscalYear",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d367096f-7c82-4556-8fd7-e65ac854c9fa",
            "sourceColumn": "FiscalYear",
            "summarizeBy": "none"
          },
          {
            "name": "CurMonthOffset",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "96f138dc-6661-4167-9aa2-28fb5d07b6cf",
            "sourceColumn": "CurMonthOffset",
            "summarizeBy": "sum"
          },
          {
            "name": "CurQuarterOffset",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ff5e70de-cbc6-441d-9f68-ced5d71df754",
            "sourceColumn": "CurQuarterOffset",
            "summarizeBy": "sum"
          },
          {
            "name": "CurYearOffset",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "01b0c1a9-0f53-48cc-8800-e8145eebcc94",
            "sourceColumn": "CurYearOffset",
            "summarizeBy": "sum"
          },
          {
            "name": "FutureDate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f44f8a1f-f52f-458d-bfa8-bba9badf358f",
            "sourceColumn": "FutureDate",
            "summarizeBy": "none"
          },
          {
            "name": "CurFiscalYearOffset",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "43152a12-14fc-4e70-b90b-19af3a9fc8e2",
            "sourceColumn": "CurFiscalYearOffset",
            "summarizeBy": "none"
          },
          {
            "name": "MonthYearNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "270817bf-850d-4f93-9d02-6dbabfe7b55e",
            "sourceColumn": "MonthYearNum",
            "summarizeBy": "sum"
          },
          {
            "name": "MonthYear",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ae3ef7e4-0e90-4606-99ea-3331f43d6a8e",
            "sourceColumn": "MonthYear",
            "summarizeBy": "none"
          },
          {
            "name": "MonthYearLong",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8aeb17a2-8382-44e0-88a6-408b96689303",
            "sourceColumn": "MonthYearLong",
            "summarizeBy": "none"
          },
          {
            "name": "WeekdayNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ddfa39d0-754d-4179-8447-67f2d4fae907",
            "sourceColumn": "WeekdayNum",
            "summarizeBy": "sum"
          },
          {
            "name": "Weekday",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "422e1c5b-cee6-451c-9881-0e1006870511",
            "sortByColumn": "WeekdayNum",
            "sourceColumn": "Weekday",
            "summarizeBy": "none"
          },
          {
            "name": "WeekdayWeekend",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a07ff16e-c432-4d71-9b74-ae4e951570d7",
            "sourceColumn": "WeekdayWeekend",
            "summarizeBy": "none"
          },
          {
            "name": "WeekSequenceNum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "1405cc9b-cec0-41c8-8a39-960fd1a83fc5",
            "sourceColumn": "WeekSequenceNum",
            "summarizeBy": "sum"
          },
          {
            "name": "WeekDate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "c9708d9b-568f-4490-ae68-3a691c029f90",
            "sourceColumn": "WeekDate",
            "summarizeBy": "none",
            "variations": [
              {
                "name": "Variation",
                "defaultHierarchy": {
                  "hierarchy": "Date Hierarchy",
                  "table": "LocalDateTable_99174f75-cabe-4d7b-b52b-6a8470ba1688"
                },
                "isDefault": true,
                "relationship": "885b6d3b-50ba-45cf-addb-6cba22999b76"
              }
            ]
          },
          {
            "name": "Week of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "0cf2f397-c5f6-4731-8666-d7317764baa1",
            "sourceColumn": "Week of Year",
            "summarizeBy": "sum"
          },
          {
            "name": "CurWeekOffset",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c0983ad1-6cd4-4e9f-b014-e7453edb8590",
            "sourceColumn": "CurWeekOffset",
            "summarizeBy": "sum"
          },
          {
            "name": "Day of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "02ca6ce1-6be9-4f31-beac-e6eb7a33dbbc",
            "sourceColumn": "Day of Year",
            "summarizeBy": "sum"
          },
          {
            "name": "Flag_YTD",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "647cb495-4e4c-4a8b-91ed-1c26a6cca5ab",
            "sourceColumn": "Flag_YTD",
            "summarizeBy": "none"
          },
          {
            "name": "Flag_MTD",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "65460ea6-3fec-43b6-93fc-704b1cc35c99",
            "sourceColumn": "Flag_MTD",
            "summarizeBy": "none"
          },
          {
            "name": "Flag_QTD",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1b18b92c-6f28-45b0-ab0d-434eb0ee1de1",
            "sourceColumn": "Flag_QTD",
            "summarizeBy": "none"
          },
          {
            "name": "CurrentDayOffset",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f2aec36b-3877-4f67-891d-eec9eea8d9ef",
            "sourceColumn": "CurrentDayOffset",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "fee49949-6e15-45d4-a698-4c1fb0897ca2",
        "partitions": [
          {
            "name": "Calendar-f292bb33-bcc8-4506-a65c-d592f7066d3c",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    /*",
                "    ****This Calendar was created and provided by Avi Singh****",
                "    ****This can be freely shared as long as this text comment is retained.****",
                "    http://www.youtube.com/PowerBIPro",
                "    www.LearnPowerBI.com by Avi Singh",
                "    */",
                "    #\"LearnPowerBI.com by Avi Singh\" = 1,",
                "    StartDate = #date(2021, 1, 1),",
                "    EndDate = Date.EndOfYear(DateTime.Date(DateTime.FixedLocalNow())) /*was \"#date(2017, 1, 1)\" Updated on 201802027: hard Coded End of Year caused some formulas to break, switching to dynamic date*/,",
                "    //Used for 'Offset' Column calculations, you may Hard code CurrentDate for testing e.g. #date(2017,9,1)",
                "    CurrentDate = DateTime.Date(DateTime.FixedLocalNow()),",
                "    // Specify the last month in your Fiscal Year, e.g. if June is the last month of your Fiscal Year, specify 6",
                "    FiscalYearEndMonth = 6,",
                "    #\"==SET PARAMETERS ABOVE==\" = 1,",
                "    #\"==Build Date Column==\" = #\"==SET PARAMETERS ABOVE==\",",
                "    ListDates = List.Dates(StartDate, Number.From(EndDate - StartDate)+1, #duration(1,0,0,0)),",
                "    #\"Converted to Table\" = Table.FromList(ListDates, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
                "    #\"Renamed Columns as Date\" = Table.RenameColumns(#\"Converted to Table\",{{\"Column1\", \"Date\"}}),",
                "    // As far as Power BI is concerned, the 'Date' column is all that is needed :-) But we will continue and add a few Human-Friendly Columns",
                "    #\"Changed Type to Date\" = Table.TransformColumnTypes(#\"Renamed Columns as Date\",{{\"Date\", type date}}),",
                "    #\"==Add Calendar Columns==\" = #\"Changed Type to Date\",",
                "    #\"Added Calendar MonthNum\" = Table.AddColumn(#\"==Add Calendar Columns==\", \"MonthNum\", each Date.Month([Date]), Int64.Type),",
                "    #\"Added Month Name\" = Table.AddColumn(#\"Added Calendar MonthNum\", \"Month\", each Text.Start(Date.MonthName([Date]),3), type text),",
                "    #\"Added Month Name Long\" = Table.AddColumn(#\"Added Month Name\", \"MonthLong\", each Date.MonthName([Date]), type text),",
                "    #\"Added Calendar Quarter\" = Table.AddColumn(#\"Added Month Name Long\", \"Quarter\", each \"Q\" & Text.From(Date.QuarterOfYear([Date]))),",
                "    #\"Added Calendar Year\" = Table.AddColumn(#\"Added Calendar Quarter\", \"Year\", each Date.Year([Date]), Int64.Type),",
                "    #\"==Add Fiscal Calendar Columns==\" = #\"Added Calendar Year\",",
                "    #\"Added FiscalMonthNum\" = Table.AddColumn(#\"==Add Fiscal Calendar Columns==\", \"FiscalMonthNum\", each if [MonthNum] > FiscalYearEndMonth",
                "then [MonthNum] - FiscalYearEndMonth",
                "else [MonthNum] + (12 - FiscalYearEndMonth), type number),",
                "    #\"Added FiscalMonth Name\" = Table.AddColumn(#\"Added FiscalMonthNum\", \"FiscalMonth\", each [Month]),",
                "    #\"Added FiscalMonth Name Long\" = Table.AddColumn(#\"Added FiscalMonth Name\", \"FiscalMonthLong\", each [MonthLong]),",
                "    #\"Added FiscalQuarter\" = Table.AddColumn(#\"Added FiscalMonth Name Long\", \"FiscalQuarter\", each \"FQ\" & Text.From(Number.RoundUp([FiscalMonthNum] / 3,0))),",
                "    #\"Added FiscalYear\" = Table.AddColumn(#\"Added FiscalQuarter\", \"FiscalYear\", each \"FY\" & ",
                "Text.End(",
                "  Text.From(",
                "    if [MonthNum] > FiscalYearEndMonth",
                "    then [Year] + 1",
                "    else [Year]",
                "  )",
                "  , 2",
                ")),",
                "",
                "    #\"==Add Calendar Date Offset Columns==\" = #\"Added FiscalYear\",",
                "    // Can be used to for example to show the past 3 months(CurMonthOffset = 0, -1, -2)",
                "    #\"Added CurMonthOffset\" = Table.AddColumn(#\"==Add Calendar Date Offset Columns==\", \"CurMonthOffset\", each ( Date.Year([Date]) - Date.Year(CurrentDate) ) * 12",
                "+ Date.Month([Date]) - Date.Month(CurrentDate), Int64.Type),",
                "    // Can be used to for example to show the past 3 quarters (CurQuarterOffset = 0, -1, -2)",
                "    #\"Added CurQuarterOffset\" = Table.AddColumn(#\"Added CurMonthOffset\", \"CurQuarterOffset\", each /*Year Difference*/",
                "       ( Date.Year([Date]) - Date.Year(CurrentDate) )*4",
                "       /*Quarter Difference*/",
                "      + Number.RoundUp(Date.Month([Date]) / 3) ",
                "      - Number.RoundUp(Date.Month(CurrentDate) / 3),",
                "Int64.Type),",
                "    // Can be used to for example to show the past 3 years (CurYearOffset = 0, -1, -2)",
                "    #\"Added CurYearOffset\" = Table.AddColumn(#\"Added CurQuarterOffset\", \"CurYearOffset\", each Date.Year([Date]) - Date.Year(CurrentDate), Int64.Type),",
                "    // Can be used to for example filter out all future dates",
                "    #\"Added FutureDate Flag\" = Table.AddColumn(#\"Added CurYearOffset\", \"FutureDate\", each if [Date] > CurrentDate then \"Future\" else \"Past\" ),",
                "    // FiscalYearOffset is the only Offset that is different.",
                "    // FiscalQuarterOffset = is same as CurQuarterOffset",
                "    // FiscalMonthOffset = is same as CurMonthOffset",
                "    #\"==Add FiscalYearOffset==\" = #\"Added FutureDate Flag\",",
                "    #\"Filtered Rows to CurrentDate\" = Table.SelectRows(#\"==Add FiscalYearOffset==\", each ([Date] = CurrentDate)),",
                "    CurrentFiscalYear = #\"Filtered Rows to CurrentDate\"{0}[FiscalYear],",
                "    #\"Continue...Orig Table\" = #\"==Add FiscalYearOffset==\",",
                "    #\"Added CurFiscalYearOffset\" = Table.AddColumn(#\"Continue...Orig Table\", \"CurFiscalYearOffset\", each Number.From(Text.Range([FiscalYear],2,2)) - ",
                "Number.From(Text.Range(CurrentFiscalYear,2,2))",
                "/*Extract the numerical portion, e.g. FY18 = 18*/),",
                "    #\"==Add General Columns==\" = #\"Added CurFiscalYearOffset\",",
                "    // Used as 'Sort by Column' for MonthYear columns",
                "    #\"Added MonthYearNum\" = Table.AddColumn(#\"==Add General Columns==\", \"MonthYearNum\", each [Year]*100 + [MonthNum] /*e.g. Sep-2016 would become 201609*/, Int64.Type),",
                "    #\"Added MonthYear\" = Table.AddColumn(#\"Added MonthYearNum\", \"MonthYear\", each [Month] & \"-\" & Text.End(Text.From([Year]),2)),",
                "    #\"Added MonthYearLong\" = Table.AddColumn(#\"Added MonthYear\", \"MonthYearLong\", each [Month] & \"-\" & Text.From([Year])),",
                "    #\"Added WeekdayNum\" = Table.AddColumn(#\"Added MonthYearLong\", \"WeekdayNum\", each Date.DayOfWeek([Date]), Int64.Type),",
                "    #\"Added Weekday Name\" = Table.AddColumn(#\"Added WeekdayNum\", \"Weekday\", each Text.Start(Date.DayOfWeekName([Date]),3), type text),",
                "    #\"Added WeekdayWeekend\" = Table.AddColumn(#\"Added Weekday Name\", \"WeekdayWeekend\", each if [WeekdayNum] = 0 or [WeekdayNum] = 6",
                "then \"Weekend\"",
                "else \"Weekday\"),",
                "    #\"==Improve Ultimate Table\" = #\"Added WeekdayWeekend\",",
                "    #\"----Add WeekSequenceNum----\" = #\"==Improve Ultimate Table\",",
                "    #\"Filtered Rows Sundays Only (Start of Week)\" = Table.SelectRows(#\"----Add WeekSequenceNum----\", each ([WeekdayNum] = 0)),",
                "    #\"Added Index WeekSequenceNum\" = Table.AddIndexColumn(#\"Filtered Rows Sundays Only (Start of Week)\", \"WeekSequenceNum\", 2, 1),",
                "    #\"Merged Queries Ultimate Table to WeekSequenceNum\" = Table.NestedJoin(#\"==Improve Ultimate Table\",{\"Date\"},#\"Added Index WeekSequenceNum\",{\"Date\"},\"Added Index WeekNum\",JoinKind.LeftOuter),",
                "    #\"Expanded Added Index WeekNum\" = Table.ExpandTableColumn(#\"Merged Queries Ultimate Table to WeekSequenceNum\", \"Added Index WeekNum\", {\"WeekSequenceNum\"}, {\"WeekSequenceNum\"}),",
                "    // somehow it ends up being unsorted after Expand Column, should not matter for the end table, but makes it harder to debug and check everything is correct. Thus sorting it.",
                "    #\"ReSorted Rows by Date\" = Table.Sort(#\"Expanded Added Index WeekNum\",{{\"Date\", Order.Ascending}}),",
                "    #\"Filled Down WeekSequenceNum\" = Table.FillDown(#\"ReSorted Rows by Date\",{\"WeekSequenceNum\"}),",
                "    #\"Replaced Value WeekSequenceNum null with 1\" = Table.ReplaceValue(#\"Filled Down WeekSequenceNum\",null,1,Replacer.ReplaceValue,{\"WeekSequenceNum\"}),",
                "    #\"Inserted Start of Week (WeekDate)\" = Table.AddColumn(#\"Replaced Value WeekSequenceNum null with 1\", \"WeekDate\", each Date.StartOfWeek([Date]), type date),",
                "    // Added 2019-Oct",
                "    #\"Inserted Week of Year\" = Table.AddColumn(#\"Inserted Start of Week (WeekDate)\", \"Week of Year\", each Date.WeekOfYear([Date]), Int64.Type),",
                "    #\"----WeekSequenceNum Complete----\" = #\"Inserted Week of Year\",",
                "    Current_WeekSequenceNum = #\"----WeekSequenceNum Complete----\"{[Date = CurrentDate]}?[WeekSequenceNum],",
                "    #\"Added Custom CurWeekOffset\" = Table.AddColumn(#\"----WeekSequenceNum Complete----\", \"CurWeekOffset\", each [WeekSequenceNum] - Current_WeekSequenceNum, Int64.Type),",
                "    // Adding a DayofYear 1 to 365",
                "    // And YTD, QTD, MTD Columns (can help with showing YTD Numbers across multiple years)",
                "    #\"==Updates 2019-Feb DayofYear and YTD QTD MTD Columns\" = #\"Added Custom CurWeekOffset\",",
                "    // This maybe useful in some DAX Calculations",
                "    #\"Inserted Day of Year\" = Table.AddColumn(#\"==Updates 2019-Feb DayofYear and YTD QTD MTD Columns\", \"Day of Year\", each Date.DayOfYear([Date]), Int64.Type),",
                "    #\"Added Flag_YTD\" = Table.AddColumn(#\"Inserted Day of Year\", \"Flag_YTD\", each if Date.DayOfYear([Date]) <= Date.DayOfYear(CurrentDate)",
                " then \"YTD\"",
                " else null),",
                "    #\"Added Flag_MTD\" = Table.AddColumn(#\"Added Flag_YTD\", \"Flag_MTD\", each if Date.Day([Date]) <= Date.Day(CurrentDate)",
                " then \"MTD\"",
                " else null),",
                "    #\"Added Flag_QTD\" = Table.AddColumn(#\"Added Flag_MTD\", \"Flag_QTD\", each //Compare Month Number in Quarter (1,2,3) for [Date] and CurrentDate",
                "if Number.Mod(Date.Month([Date])-1, 3) + 1",
                "<= Number.Mod(Date.Month(CurrentDate)-1, 3) + 1",
                "then \"QTD\"",
                "else null),",
                "    #\"==Update 2019-Mar CurrentDatOffset\" = #\"Added Flag_QTD\",",
                "    #\"Added CurrentDayOffset\" = Table.AddColumn(#\"==Update 2019-Mar CurrentDatOffset\", \"CurrentDayOffset\", each [Date] - CurrentDate),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Added CurrentDayOffset\",{{\"CurrentDayOffset\", Int64.Type}})",
                "in",
                "    #\"Changed Type1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LocalDateTable_00c7c2b5-4c42-4d2e-a58c-99eec91b53a8",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "c9eb096a-0dbf-425e-a8f0-4b2ee7a311d6",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "f251e706-e23c-4515-87cd-c8f0622735fb",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "0dc05d90-d01d-4c9e-8b81-e57793020d56",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "8eed14c8-b165-45c5-864f-702c70ca20a7",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "0e362faf-7b98-45ea-a393-1916d7485564",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "81ed9710-af44-4398-9980-2933b4b80271",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "8c3aa8c7-24e8-40a9-9201-f21581e385cf",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "661f56d4-2d6f-4f70-b06d-3d53e96e48ea",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "de766163-3d1a-4459-b164-9769c8147dc6",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "ca461c2b-7ef1-4d25-8b01-1124b0f359b7",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "fef1184e-de2a-426b-bd7d-910f60204c4c",
                "ordinal": 3
              }
            ],
            "lineageTag": "dc50f831-66f9-4e76-a271-356140cf76a6"
          }
        ],
        "isHidden": true,
        "lineageTag": "b889f708-c9f9-40b1-9230-d29929a0b43a",
        "partitions": [
          {
            "name": "LocalDateTable_00c7c2b5-4c42-4d2e-a58c-99eec91b53a8-6790e212-fd68-4918-87eb-6c4d02324973",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Calendar'[Date])), 1, 1), Date(Year(MAX('Calendar'[Date])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "LocalDateTable_99174f75-cabe-4d7b-b52b-6a8470ba1688",
        "annotations": [
          {
            "name": "__PBI_LocalDateTable",
            "value": "true"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataCategory": "PaddedDateTableDates",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "9ddcc69b-d913-45d1-83d5-50a3dcd003dd",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Year"
              }
            ],
            "dataCategory": "Years",
            "dataType": "int64",
            "expression": "YEAR([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "991f30a9-4fba-4b22-8e00-fec36f5806bd",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "MonthNumber"
              }
            ],
            "dataCategory": "MonthOfYear",
            "dataType": "int64",
            "expression": "MONTH([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "295232c0-c627-40a9-acf2-7ce15daf06a3",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Month"
              }
            ],
            "dataCategory": "Months",
            "dataType": "string",
            "expression": "FORMAT([Date], \"MMMM\")",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "4ad28107-ed7d-4764-aca0-e6df2a854d21",
            "sortByColumn": "MonthNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "QuarterNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "QuarterNumber"
              }
            ],
            "dataCategory": "QuarterOfYear",
            "dataType": "int64",
            "expression": "INT(([MonthNo] + 2) / 3)",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "c059daee-3485-4e43-bcb6-b8f928da2d26",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Quarter"
              }
            ],
            "dataCategory": "Quarters",
            "dataType": "string",
            "expression": "\"Qtr \" & [QuarterNo]",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "5b107556-3b6d-4ede-bdc4-c9f09e57693f",
            "sortByColumn": "QuarterNo",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "TemplateId",
                "value": "Day"
              }
            ],
            "dataCategory": "DayOfMonth",
            "dataType": "int64",
            "expression": "DAY([Date])",
            "isDataTypeInferred": true,
            "isHidden": true,
            "lineageTag": "8f9e5a03-db7a-4af0-85bb-6674086ad786",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "annotations": [
              {
                "name": "TemplateId",
                "value": "DateHierarchy"
              }
            ],
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "1fd5ce29-bfb8-457d-b2cd-02af90eaa184",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "1870d379-d8c5-4f9b-b570-06f66a3bd9ac",
                "ordinal": 1
              },
              {
                "name": "Month",
                "column": "Month",
                "lineageTag": "c733dc85-8ac5-40f9-9a0a-4f5345c94081",
                "ordinal": 2
              },
              {
                "name": "Day",
                "column": "Day",
                "lineageTag": "76f36671-94f8-4fb6-9abb-65a549689967",
                "ordinal": 3
              }
            ],
            "lineageTag": "3953cd4d-ede3-43a6-aef3-eba3156d4dae"
          }
        ],
        "isHidden": true,
        "lineageTag": "a76429d2-46fa-4dbb-861c-ec597c3739a5",
        "partitions": [
          {
            "name": "LocalDateTable_99174f75-cabe-4d7b-b52b-6a8470ba1688-8c63c983-64df-4f65-80df-50179f44a0ea",
            "mode": "import",
            "source": {
              "expression": "Calendar(Date(Year(MIN('Calendar'[WeekDate])), 1, 1), Date(Year(MAX('Calendar'[WeekDate])), 12, 31))",
              "type": "calculated"
            }
          }
        ],
        "showAsVariationsOnly": true
      },
      {
        "name": "All_measures",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "lineageTag": "a9a887bb-afd4-46fa-883f-60dd24193099",
        "measures": [
          {
            "name": "Calls Count",
            "expression": "COUNTA('WhatsApp Chat'[Calls])",
            "formatString": "0",
            "lineageTag": "94728dbf-a421-410b-b408-68a5d5583327"
          },
          {
            "name": "Call Average",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "expression": "DIVIDE(COUNTA('WhatsApp Chat'[Calls]), DISTINCTCOUNT('WhatsApp Chat'[Date]))",
            "lineageTag": "68db2d55-f22a-4290-b854-77dd9810356a"
          },
          {
            "name": "CalendarDays",
            "expression": "CALCULATE(COUNTROWS('Calendar'), NOT('Calendar'[WeekdayNum]==0))",
            "formatString": "0",
            "lineageTag": "89ac2a9c-eaca-4196-8bb0-ea5ccbe0cda3"
          },
          {
            "name": "EodyCount",
            "expression": "CALCULATE(DISTINCTCOUNT('WhatsApp Chat'[ReportType]), 'WhatsApp Chat'[ReportType]==\"EODY\")",
            "formatString": "0",
            "lineageTag": "317f25f3-85d8-424c-9208-92cfc956c9f9"
          },
          {
            "name": "FW Days",
            "expression": "DISTINCTCOUNT('WhatsApp Chat'[Date])",
            "formatString": "0",
            "lineageTag": "e6cc78f9-c989-4ff0-8403-93a078246042"
          },
          {
            "name": "Holiday",
            "expression": "CALCULATE(COUNTROWS('Calendar'), Holidays[Date])",
            "lineageTag": "96aa21c9-b7be-4c0a-840d-ce89ad51f0d6"
          },
          {
            "name": "Leaves",
            "expression": "([CalendarDays] - [Holiday] - [EodyCount]) - [FW Days]",
            "formatString": "0",
            "lineageTag": "9e8cf9d8-5c53-4400-8556-f457efc76758"
          }
        ],
        "partitions": [
          {
            "name": "All_measures-ad549d4b-a083-415c-88b5-97689c0afeb9",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Day_Bucket",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Low",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "59cef557-80f7-4e3c-a96f-cb09b22c69d6",
            "sourceColumn": "Low",
            "summarizeBy": "none"
          },
          {
            "name": "High",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "bb1c9f8b-3843-4109-a61b-bd3cf2586fd6",
            "sourceColumn": "High",
            "summarizeBy": "none"
          },
          {
            "name": "Day Segentation",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "402791c5-2981-4c13-87f9-13cb543582fe",
            "sourceColumn": "Day Segentation",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "d084aa05-81bd-40c3-b860-f5b08fcaa1ba",
        "partitions": [
          {
            "name": "Day_Bucket-ae759d52-5cc0-4017-886e-cdd6d2afa845",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WMjCwMjBQ0lEysITQrolFOZXOiTk5xUqxOtFgYUOgsKERRNo3vygvMy8doQAkAVZgClHgmFaSWuSXn5+HpMQUqgRmRVkqmhlQS4yMrUwtgbRPYkkqqqJYAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Low = _t, High = _t, #\"Day Segentation\" = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Low\", type time}, {\"High\", type time}, {\"Day Segentation\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "WhatsApp Chat",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "ReportType",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "460e6dff-e49a-4ed3-9cd3-5d7dfb6afeff",
            "sourceColumn": "ReportType",
            "summarizeBy": "none"
          },
          {
            "name": "HqKey",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "a67a0f20-6670-41b9-a314-82a35dcd0aa5",
            "sourceColumn": "HqKey",
            "summarizeBy": "none"
          },
          {
            "name": "Representative",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "04eb6052-ed11-4527-b486-d65ae28d696d",
            "sourceColumn": "Representative",
            "summarizeBy": "none"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "945de2d9-43cc-4b41-b25d-62e6c3380e5d",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "61eaef54-1715-4a24-9b99-c34141a117cb",
            "sourceColumn": "Time",
            "summarizeBy": "none"
          },
          {
            "name": "Calls",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8b71e322-bf4e-47d7-aea2-4d64996df100",
            "sourceColumn": "Calls",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "e22f58eb-0ba7-452c-aba4-acc0bae421b2",
        "partitions": [
          {
            "name": "WhatsApp Chat",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = fDataClean()",
                "in",
                "    Source"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "HQ",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Representative",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6913f343-6128-420f-94c6-8ad40f6eb065",
            "sourceColumn": "Representative",
            "summarizeBy": "none"
          },
          {
            "name": "HQ",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4088704d-9e53-4533-8841-2dfffa5e9ea0",
            "sourceColumn": "HQ",
            "summarizeBy": "none"
          },
          {
            "name": "HqKey",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "7f2cf010-2c64-45c5-8921-1485875f774c",
            "sourceColumn": "HqKey",
            "summarizeBy": "none"
          },
          {
            "name": "HqID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bab73b4c-d0dc-4c51-95e7-46acfcba7715",
            "sourceColumn": "HqID",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "12c21dd2-cc56-4186-a63c-2bbbc73deda3",
        "partitions": [
          {
            "name": "HQ",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"TZBNDoQgDEavYljPJNR/l01KQEcxQTExxvtfY4odJ64or4+vwHGoKRJhwCGql3Lo44R+dZlHi4EJCAUN6nyxjH6IHlkIhmhPzSVk475ylcsOdH6pSwxmccx6T33AO7AQArq4rMH+kz5zQM63OCLvSiGgy99gxBR2r5XUoKurbeeNQ5nxQ3Do72G1ENC1DGNMRm61uH57mI0g0I1cPnX5JFPa7Dv9Qis16PYyyDyF9PbuFjp1nl8=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Representative = _t, HQ = _t, HqKey = _t, HqID = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"HqKey\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Holidays",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "0c7aa990-a71f-41c3-b2d0-d6c7cd91c294",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "Occasion",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "39012f7a-46c8-4cc3-9928-fb7424719c14",
            "sourceColumn": "Occasion",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "71c11b40-134d-4bcd-9867-fad4a9cd2a12",
        "partitions": [
          {
            "name": "Holidays",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WMjDRNTDTNTIwMlLSUfJNTS3JzEtXio0FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Date = _t, Occasion = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Date\", type date}, {\"Occasion\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      }
    ]
  }
}